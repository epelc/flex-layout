{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/utils/array.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('8.0.0-beta.26');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, DoCheck, ElementRef, Input, Optional, Self} from '@angular/core';\nimport {NgClass, ɵNgClassImpl, ɵNgClassR2Impl} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgClassImpl,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(this.delegate);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgClassImplProvider = {\n  provide: ɵNgClassImpl,\n  useClass: ɵNgClassR2Impl\n};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs, providers: [LayoutNgClassImplProvider]})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle, ɵNgStyleImpl, ɵNgStyleR2Impl} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgStyleImpl,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.delegate);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgStyleImplProvider = {\n  provide: ɵNgStyleImpl,\n  useClass: ɵNgStyleR2Impl\n};\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs, providers: [LayoutNgStyleImplProvider]})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** We need to override clearStyles because in most cases mru isn't populated */\n  protected clearStyles() {\n    const gridMode = Object.keys(this.mru).length > 0;\n    const childrenStyle = gridMode ? 'padding' :\n      getMarginType(this.directionality.value, this.layout);\n\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({[childrenStyle]: ''}, this.childrenNodes);\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction getMarginType(directionality: string, layout: string) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default :\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  const key = getMarginType(parent.directionality, parent.layout);\n  const margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n  margins[key] = gapValue;\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n      this.marshal.trackValue(this.nativeElement, 'layout-align')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerReflow.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n\n  // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n  //  and `afterprint` event listeners.\n  private registeredBeforeAfterPrintHooks: boolean = false;\n\n  // isPrintingBeforeAfterEvent is used to track if we are printing from within\n  // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n  // form `interceptEvents` so that printing is not stopped while the dialog\n  // is still open. This is an extension of the `isPrinting` property on\n  // browsers which support `beforeprint` and `afterprint` events.\n  private isPrintingBeforeAfterEvent: boolean = false;\n\n  // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n  // trigger print styles synchronously and apply proper layout styles.\n  // It is a noop if the hooks have already been registered or the platform is\n  // not a browser(fallsback to mql print media queries).\n  private registerBeforeAfterPrintHooks(target: HookTarget) {\n    if (!isPlatformBrowser(this._platformId) || this.registeredBeforeAfterPrintHooks) {\n      return;\n    }\n\n    this.registeredBeforeAfterPrintHooks = true;\n\n    // Could we have teardown logic to remove if there are no print listeners being used?\n    (<Window>window).addEventListener('beforeprint', () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      if (!this.isPrinting) {\n        this.isPrintingBeforeAfterEvent = true;\n        this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n        target.updateStyles();\n      }\n    });\n\n    (<Window>window).addEventListener('afterprint', () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      this.isPrintingBeforeAfterEvent = false;\n      if (this.isPrinting) {\n        this.stopPrinting(target);\n        target.updateStyles();\n      }\n    });\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    this.registerBeforeAfterPrintHooks(target);\n\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is supported; so 'print' mediaQuery activations are used as a fallback\n   * in browsers without `beforeprint` support.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else if (!this.isPrintingBeforeAfterEvent) {\n        // Only clear deactivations if we aren't printing from a `beforeprint` event.\n        // Otherwise this will clear before `stopPrinting()` is called to restore\n        // the pre-Print Activations.\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 8.0.0-beta.25\n   * @deletion-target v8.0.0-beta.26\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.9px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.9px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.9px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.9px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.9px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.9px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.9px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.9px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n"],"names":["tslib_1.__extends","LayoutAlignDirective","_super","prototype","updateWithValue","value","layout","this","inline","styleCache","layoutAlignHorizontalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalInlineCache","layoutAlignVerticalRevInlineCache","layoutAlignVerticalRevCache","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignHorizontalCache","addStyles","onLayoutChange","matcher","_this","layoutKeys","split","includes","LAYOUT_VALUES","find","x","triggerUpdate","type","ElementRef","StyleUtils","LayoutAlignStyleBuilder","decorators","Optional","MediaMarshaller","BaseDirective2","DefaultLayoutAlignDirective","apply","arguments","inputs","Directive","args","selector","Map","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","FlexModule","NgModule","imports","CoreModule","BidiModule","declarations","slice","exports","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","buildStyles","input","buildCss","Injectable","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","call","DIRECTIVE_KEY","alignCache","init","DefaultGridAlignDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","alignColumnsInlineCache","alignColumnsCache","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","Inject","PLATFORM_ID","style","styleList","i","length","colonIndex","Error","name_1","substr","styleMap","_writeStyleAttribute","element","styleAttrValue","key","setAttribute","StylesheetMap","undefined","shouldCache","sideEffect","_input","_styles","_parent","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","asObservable","pipe","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","add","triggers","watchers","newSubscription","merge","subscribe","currentValue","query","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","src","DefaultImgSrcDirective","ClassDirective","delegate","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","ɵNgClassImpl","Self","LayoutNgClassImplProvider","useClass","ɵNgClassR2Impl","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","ɵNgStyleImpl","DomSanitizer","LayoutNgStyleImplProvider","ɵNgStyleR2Impl","DefaultStyleDirective","INLINE","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","observerSubject","change","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","mru","childrenStyle","getMarginType","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","flexFillCache","align","mainAxis","crossAxis","flex-direction","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","coerceArray","isArray","toMediaQuery","locator","findByAlias","splitQueries","reduce","a1","a2","concat","applyCssPrefixes","j","_validateCalcValue","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","activatedAlias","complete","builder","useCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","BREAKPOINT_PRINT","registeredBeforeAfterPrintHooks","isPrintingBeforeAfterEvent","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","registerBeforeAfterPrintHooks","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","asapScheduler","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","_readStyleAttribute","styleAttribute"],"mappings":"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"}